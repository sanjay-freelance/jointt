(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{7:function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return se}));var r=t(0),a=t.n(r),i=t(2);function o(){var e=d(["\n   margin: 0.125rem 0.125rem 0.125rem .5rem;\n"]);return o=function(){return e},e}function l(){var e=d(["\n    display: flex;\n    justify-content: flex-end;\n    padding-right: 64px;\n"]);return l=function(){return e},e}function u(){var e=d(["\n    display: flex;\n    flex-direction: column;\n    width: 60%\n"]);return u=function(){return e},e}function c(){var e=d(["\n    display: flex;\n    align-items: center;\n    justify-content: center;\n"]);return c=function(){return e},e}function d(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}var f=Object(i.a)("div")(c()),s=Object(i.a)("form").attrs((function(){return{className:"flex-form"}}))(u()),m=Object(i.a)("div")(l()),v=Object(i.a)("button").attrs((function(){return{className:"form-button"}}))(o());function p(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return;var t=[],r=!0,a=!1,i=void 0;try{for(var o,l=e[Symbol.iterator]();!(r=(o=l.next()).done)&&(t.push(o.value),!n||t.length!==n);r=!0);}catch(e){a=!0,i=e}finally{try{r||null==l.return||l.return()}finally{if(a)throw i}}return t}(e,n)||function(e,n){if(!e)return;if("string"==typeof e)return b(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);"Object"===t&&e.constructor&&(t=e.constructor.name);if("Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return b(e,n)}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function b(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}function g(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function y(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?g(Object(t),!0).forEach((function(n){h(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):g(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function h(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}var O=function(e,n,t,r){var a=e.name,i=e.required,o=e.label;if(e.readOnly)return null;var l=t?t[a]:null;if(!i&&!t)return null;var u="",c=!0;if(n){if(l){var d=l.pattern,f=l.customValidator;"string"==typeof n&&d&&d.regex&&!new RegExp(d.regex).test(n)?(c=!1,u=d.message):f&&f.predicate&&!f.predicate(n)&&(c=!1,u=f.message)}}else i&&(c=!1,u="Enter ".concat(o));return{isValid:c,validationMessage:u,instantValidation:!(!c&&r)}},j=function(e,n,t){var r=e?Object.keys(e):[];if(t){for(var a=0;a<r.length;a++){var i=r[a],o=e[i],l=n(o);if(void 0!==l)return l}return!0}var u={};return r.map((function(t){var r=e[t];u[t]=n(r)})),u},w=function(e,n,t){return j(e,(function(e){var r=y({},e);r.name===n&&Object.keys(t).forEach((function(e){r[e]=t[e]}));return r}))};function x(e,n){var t=p(Object(r.useState)(e),2),a=t[0],i=t[1],o=p(Object(r.useState)(!1),2),l=o[0],u=o[1];Object(r.useEffect)((function(){var t=!0,r=j(e,(function(e){var r=y({},e),a=O(e,e.value,n,!0);return a&&(Object.assign(r,a),a.isValid||(t=!1)),r}));console.log(t),i(r),u(t)}),[e]);return{formFields:a,isValid:l,handleChange:function(e,t,r){var o=e.name,l=e.required,c=e.instantValidation,d=void 0===r,f=!d&&!c,s=f&&function(e,n){return j(e,(function(e){var t=e.name,r=e.isValid;if(n!==t&&!1===r)return!1}),!0)}(a,o),m=d?null:{value:r};if(!f||(i(w(a,o,m)),l&&s)){var v=O(e,d?t:r,n);if(v){m?Object.assign(m,v):m=v;var p=function(e,n,t){return j(e,(function(e){var r=e.name,a=e.isValid;if(n!==r){if(!1===a)return!1}else if(!t)return!1}),!0)}(a,o,v.isValid);console.log(p),u(p)}m&&!s&&i(w(a,o,m))}},reset:function(){i(function(e,n){return j(e,(function(e){var t=O(e,"",n,!0),r=y({},e);return e.readOnly||(r.value=""),t&&Object.assign(r,t),r}))}(a,n)),u(!1)}}}function E(){var e=D(["\n    border: 1px solid;\n    border-color: ",";\n    border-radius: 0.1875rem;\n    padding: 0.625rem;\n    margin-top: 0.375rem;\n    margin-bottom: 0.375rem;\n"]);return E=function(){return e},e}function P(){var e=D(["\n    border: 1px solid;\n    border-color: ",";\n    border-radius: 0.1875rem;\n    padding: 0.625rem;\n    margin-top: 0.375rem;\n    margin-bottom: 0.375rem;\n"]);return P=function(){return e},e}function D(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}var C=Object(i.a)("input")(P(),(function(e){return e["aria-invalid"]?"red":"grey"})),S=Object(i.a)("textarea")(E(),(function(e){return e["aria-invalid"]?"red":"grey"}));function V(e){var n=e.id,t=e.name,a=e.type,i=e.hidden,o=e.value,l=e.onChange,u=e.onKeyDown,c=e.disabled,d=e.required,f=void 0!==d&&d,s=e.placeholder,m=e.invalid,v=e.onBlur,p=e.className,b="textArea"==a?S:C;return r.createElement(b,{className:p,disabled:c,type:1===i?"password":a,name:void 0===t?n:t,placeholder:s,required:f,"aria-required":f,id:n,"aria-invalid":m,value:o,onChange:function(e){return l(e.target.value)},onKeyDown:u,onBlur:v})}function N(){var e=K(["\n    position: absolute;\n    right: 0rem;\n    bottom: -0.32rem;\n    font-weight: 600;\n    text-align: center;\n    font-size: 60%;\n    padding: 0.24rem 0.4rem;\n    margin: 0rem 0.25rem;\n    color: red;\n"]);return N=function(){return e},e}function z(){var e=K(["\n    position: relative;\n"]);return z=function(){return e},e}function k(){var e=K(["\n    text-decoration: none;\n"]);return k=function(){return e},e}function q(){var e=K(["\n    color: lightgrey;\n    margin-top: 16px;\n    margin-bottom: 4px;\n"]);return q=function(){return e},e}function I(){var e=K(["\n    width: 100%\n"]);return I=function(){return e},e}function A(){var e=K(["\n    flex: 1;\n    min-width: 20rem;\n"]);return A=function(){return e},e}function F(){var e=K(["\n    width: 100%;\n    align-self: center;\n    padding-right: 0.25rem;\n"]);return F=function(){return e},e}function B(){var e=K(["\n    min-width: 16rem;\n    align-self: center;\n    padding-right: 0.25rem;\n"]);return B=function(){return e},e}function M(){var e=K(["\n    max-width: 10rem;\n    min-width: 8rem;\n    align-self: center;\n    padding-right: 0.25rem;\n"]);return M=function(){return e},e}function R(){var e=K(["\n    display: flex;\n    flex-direction: column;\n    flex-wrap: wrap;\n    margin-bottom: 1.65rem;\n"]);return R=function(){return e},e}function J(){var e=K(["\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    margin-bottom: 1.65rem;\n"]);return J=function(){return e},e}function K(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}var L=Object(i.a)("div")(J()),T=Object(i.a)("div")(R()),$=Object(i.a)("label").attrs((function(){return{className:"form-label"}}))(M()),U=Object(i.a)("div")(B()),Z=Object(i.a)("div")(F()),G=Object(i.a)("div")(A()),H=Object(i.a)("div")(I()),Q=Object(i.a)("div")(q()),W=Object(i.a)("abbr")(k()),X=Object(i.a)("div")(z()),Y=Object(i.a)("label")(N()),_=function(e){var n=e.id,t=e.field,r=e.editable,i=e.isInvalid,o=e.onChange,l=e.value,u=t.name,c=t.label,d=t.type,f=t.required,s=t.validationMessage,m=t.description,v=t.layout;var p=m?a.a.createElement(Q,null,m):null,b="vertical"===v?T:L,g="vertical"===v?H:G,y="vertical"===v?Z:U;return a.a.createElement(b,null,a.a.createElement(y,null,a.a.createElement($,{htmlFor:n},c,f&&a.a.createElement(W,{title:"Required"}," *")),p),a.a.createElement(g,null,i&&a.a.createElement(X,null,a.a.createElement(Y,null,s)),a.a.createElement(V,{id:n,name:u,type:d,required:f,disabled:!r,value:void 0===l?"":l,invalid:i,onChange:function(e){o(t,l,e)},onBlur:function(){o(t,l)}})))};function ee(){var e=re(["\n  border: 1px solid lightgray;\n  border-radius: 4px;\n  padding: 32px;\n"]);return ee=function(){return e},e}function ne(){var e=re(["\n    display: flex;\n    flex-direction: column;\n"]);return ne=function(){return e},e}function te(){var e=re(["\n    display: flex;\n    flex-direction: row;\n"]);return te=function(){return e},e}function re(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}var ae=Object(i.a)("div").attrs((function(){return{className:"hDiv"}}))(te()),ie=Object(i.a)("div").attrs((function(){return{className:"vDiv"}}))(ne()),oe=Object(i.a)("div").attrs((function(){return{className:"BorderedDiv"}}))(ee());function le(e){var n=e.metaData,t=e.handleChange,r=e.editable,i=e.formId,o=e.fields,l=n.children,u=n.layout,c=[],d=[];return l.map((function(e){var n=e.name,l=e.type,u=e.readOnly,f=e.layout;if("group"===l)c.push(a.a.createElement(le,{metaData:e,key:n,handleChange:t,layout:f,formId:i,fields:o,editable:r}));else{var s=o[n],m=s.isValid,v=s.instantValidation,p=r&&v&&!1===m,b=i+n,g=!u&&r,y=null,h=s.value;y="text"===l||"email"===l?a.a.createElement(_,{id:b,key:n,editable:g,isInvalid:p,onChange:t,value:h,field:s}):a.a.createElement(_,{id:b,key:n,editable:g,isInvalid:p,onChange:t,field:e}),d.push(y)}})),"horizontal"===u?a.a.createElement(ae,null,d.length>0?a.a.createElement(oe,null,d):null,c):a.a.createElement(ie,null,d.length>0?a.a.createElement(oe,null,d):null,c)}function ue(e){var n=e.id,t=e.editable,r=e.validators,i=e.onSubmit,o=(e.name,e.submitLabel),l=e.metaData,u=x(e.fields,r),c=u.formFields,d=u.isValid,p=u.handleChange,b=u.reset;console.log(d);return a.a.createElement(f,null,a.a.createElement(s,{onSubmit:function(e){e.preventDefault(),i(function(e){var n={};return e.forEach((function(e){var t=e.name,r=e.value;n[t]=r})),n}(c))},noValidate:!0},a.a.createElement(le,{metaData:l,fields:c,handleChange:p,editable:t,formId:n}),a.a.createElement(m,null,a.a.createElement(v,{disabled:!t||!d},o||"Submit"),a.a.createElement(v,{disabled:!t,onClick:function(e){e.preventDefault(),b()}},"Reset"))))}var ce={pageName:{customValidator:{predicate:function(e){return e.length>=3},message:"Must Contain min 3 chars"}},email:{pattern:{regex:"^(([-\\w\\d]+)(\\.[-\\w\\d]+)*@([-\\w\\d]+)(\\.[-\\w\\d]+)*(\\.([a-zA-Z]{2,5}|[\\d]{1,3})){1,2})$",message:"Invalid Email Format"}}},de={type:"group",name:"group1",layout:"vertical",children:[{type:"group",label:"group1",name:"group1",layout:"vertical",children:[{type:"text",label:"Page Name",name:"pageName",required:!0,description:"Page Name Description"},{type:"email",label:"Email",name:"email",required:!0,description:"Email Description"},{type:"file",label:"Profile Photo",name:"profilePhoto",layout:"vertical",description:"Profile Photo Description"}]},{type:"group",label:"group2",name:"group2",layout:"vertical",children:[{type:"file",label:"Cover Photo",name:"coverPhoto",description:"Cover Photo Description"}]},{type:"group",label:"group3",name:"group3",layout:"vertical",children:[{type:"text",label:"About your page",name:"aboutPage",layout:"vertical",description:"This is the first thing potential clients will see when they land on your page, so make sure you paint a compelling picture of how they can join you on this journey."}]}]};function fe(){var e={};return function e(n,t){n.map((function(n){var r=n.type,a=n.children,i=n.name;"group"==r?e(a,t):t[i]=n}))}(de.children,e),e}function se(){return a.a.createElement("div",{className:"basics"},a.a.createElement(ue,{id:"userForm",fields:fe(),metaData:de,editable:!0,validators:ce,name:"user",submitLabel:"Save"}))}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,